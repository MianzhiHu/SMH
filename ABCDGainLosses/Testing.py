import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# importing the dataset
dataset = pd.read_csv('./TESTING.csv')

# clean the dataset
# remove the first 6 rows
dataset = dataset.iloc[6:]
# remove the last 2 rows
dataset = dataset.iloc[:-2]
# remove the \' from values in the first column
dataset.iloc[:, 0] = dataset.iloc[:, 0].str.replace('\'', '')
# convert the first column to float
dataset.iloc[:, 0] = dataset.iloc[:, 0].astype(float)
dataset.iloc[:, 1] = dataset.iloc[:, 1].astype(float)

# draw a line plot of the data
plt.figure(figsize=(15, 10))
plt.plot(dataset.iloc[:, 0], dataset.iloc[:, 1], color='red')
plt.title('Testing Data')
plt.xlabel('Frequency')
plt.ylabel('Gain')
plt.show()

x = [1,9.1812,9.1801,9.179,9.1778,9.1778,9.1778,9.1778,9.179,9.1812,9.1835,9.1858,9.1881,9.1904,9.1915,9.1938,9.195,9.1961,9.1972,9.1984,9.1984,9.1984,9.1984,9.1972,9.1972,9.1972,9.1972,9.1972,9.1984,9.1995,9.2007,9.2018,9.203,9.2053,9.2076,9.2087,9.2098,9.211,9.2121,9.2133,9.2133,9.2133,9.2133,9.2133,9.2133,9.2133,9.2133,9.2133,9.2144,9.2144,9.2156,9.2167,9.219,9.2202,9.2213,9.2225,9.2236,9.2248,9.2259,9.2259,9.2271,9.2271,9.2282,9.2282,9.2282,9.2282,9.2282,9.2282,9.2282,9.2282,9.2294,9.2294,9.2305,9.2317,9.2328,9.234,9.2351,9.2363,9.2386,9.2386,9.2397,9.2409,9.2409,9.242,9.242,9.242,9.242,9.242,9.242,9.242,9.2432,9.2432,9.2444,9.2455,9.2467,9.2478,9.2501,9.2524,9.2547,9.2559,9.2582,9.2617,9.2628,9.2652,9.2675,9.2686,9.2709,9.2721,9.2733,9.2744,9.2756,9.2767,9.2779,9.2791,9.2802,9.2814,9.2837,9.2849,9.2872,9.2884,9.2907,9.2918,9.2942,9.2953,9.2977,9.2988,9.3,9.3012,9.3023,9.3035,9.3047,9.3058,9.307,9.3082,9.3093,9.3117,9.3128,9.3152,9.3175,9.3198,9.321,9.3222,9.3233,9.3245,9.3268,9.328,9.328,9.3292,9.3304,9.3315,9.3315,9.3327,9.3339,9.335,9.3362,9.3362,9.3374,9.3386,9.3397,9.3409,9.3421,9.3433,9.3456,9.3456,9.3468,9.3479,9.3491,9.3491,9.3503,9.3503,9.3503,9.3503,9.3515,9.3515,9.3515,9.3515,9.3526,9.3526,9.3526,9.3538,9.355,9.3562,9.3562,9.3574,9.3585,9.3597,9.3597,9.3609,9.3609,9.3609,9.3609,9.3609,9.3609,9.3609,9.3609,9.3609,9.3609,9.3621,9.3621,9.3632,9.3644,9.3656,9.3656,9.3668,9.3668,9.3668,9.3668,9.3668,9.3668,9.3656,9.3644,9.3644,9.3632,9.3621,9.3609,9.3597,9.3597,9.3585,9.3585,9.3585,9.3585,9.3597,9.3609,9.3621,9.3632,9.3632,9.3632,9.3632,9.3632,9.3621,9.3597,9.3585,9.3562,9.355,9.3526,9.3515,9.3503,9.3491,9.3479,9.3468,9.3468,9.3468,9.3456,9.3444,9.3444,9.3433,9.3421,9.3397,9.3386,9.3374,9.335,9.3327,9.3304,9.3292,9.3268,9.3245,9.3233,9.3222,9.321,9.3198,9.3187,9.3175,9.3163,9.3163,9.3152,9.314,9.3128,9.3105,9.3093,9.307,9.3058,9.3035,9.3012,9.2988,9.2965,9.2942,9.2918,9.2895,9.2872,9.286,9.2837,9.2825,9.2814,9.2802,9.2779]
y = [1,9.1927,9.1915,9.1904,9.1904,9.1892,9.1892,9.1892,9.1892,9.1892,9.1904,9.1915,9.1915,9.1927,9.1927,9.1927,9.1927,9.1927,9.1927,9.1927,9.1927,9.1927,9.1915,9.1904,9.1904,9.1892,9.1881,9.1881,9.187,9.187,9.187,9.187,9.187,9.1858,9.187,9.187,9.187,9.187,9.187,9.187,9.1881,9.1881,9.187,9.187,9.187,9.187,9.187,9.187,9.187,9.187,9.187,9.187,9.187,9.187,9.1881,9.1881,9.1892,9.1892,9.1904,9.1904,9.1915,9.1927,9.1927,9.1938,9.1938,9.1938,9.195,9.195,9.195,9.195,9.1961,9.1961,9.1961,9.1972,9.1972,9.1984,9.1995,9.2007,9.2018,9.2018,9.203,9.2041,9.2053,9.2053,9.2064,9.2064,9.2064,9.2064,9.2076,9.2076,9.2076,9.2076,9.2076,9.2087,9.2087,9.2098,9.211,9.211,9.2121,9.2133,9.2144,9.2156,9.2167,9.2179,9.219,9.219,9.2202,9.2202,9.2202,9.2213,9.2213,9.2213,9.2202,9.2213,9.2213,9.2213,9.2213,9.2213,9.2225,9.2225,9.2236,9.2236,9.2248,9.2248,9.2248,9.2248,9.2248,9.2248,9.2248,9.2248,9.2248,9.2248,9.2236,9.2236,9.2236,9.2236,9.2236,9.2236,9.2236,9.2236,9.2236,9.2236,9.2248,9.2248,9.2236,9.2236,9.2236,9.2225,9.2225,9.2225,9.2213,9.2202,9.2202,9.219,9.219,9.2179,9.2179,9.2167,9.2167,9.2167,9.2156,9.2156,9.2156,9.2156,9.2156,9.2144,9.2144,9.2133,9.2133,9.2133,9.2121,9.2121,9.211,9.211,9.2098,9.2087,9.2087,9.2076,9.2076,9.2064,9.2064,9.2053,9.2053,9.2053,9.2041,9.2041,9.203,9.203,9.2018,9.2018,9.2007,9.1995,9.1984,9.1972,9.1961,9.195,9.1938,9.1927,9.1915,9.1915,9.1904,9.1892,9.1892,9.1881,9.1881,9.187,9.187,9.1858,9.1858,9.1847,9.1835,9.1824,9.1812,9.1801,9.179,9.1767,9.1755,9.1744,9.1733,9.1721,9.171,9.1698,9.1687,9.1687,9.1676,9.1664,9.1653,9.1653,9.1642,9.163,9.1619,9.1607,9.1585,9.1573,9.1562,9.1539,9.1528,9.1517,9.1494,9.1482,9.1471,9.146,9.146,9.1448,9.1448,9.1437,9.1437,9.1426,9.1426,9.1414,9.1414,9.1403,9.1392,9.138,9.1369,9.1358,9.1346,9.1346,9.1335,9.1324,9.1324,9.1324,9.1324,9.1324,9.1324,9.1324,9.1324,9.1335,9.1335]
z = [1,6.9025,6.8981,6.8937,6.89,6.8864,6.8835,6.8805,6.8784,6.8754,6.8732,6.8718,6.8696,6.8681,6.8667,6.866,6.8645,6.863,6.8623,6.8616,6.8609,6.8601,6.8587,6.858,6.8565,6.8558,6.8543,6.8529,6.8514,6.8492,6.8471,6.8442,6.842,6.8391,6.8362,6.8326,6.8297,6.8268,6.8232,6.8203,6.8174,6.8146,6.8117,6.8088,6.8066,6.8045,6.8023,6.7995,6.798,6.7966,6.7944,6.793,6.7909,6.7894,6.7873,6.7851,6.783,6.7816,6.7787,6.7766,6.7744,6.7723,6.7701,6.768,6.7666,6.7651,6.7637,6.763,6.7616,6.7602,6.7587,6.7573,6.7552,6.753,6.7509,6.7488,6.7467,6.7438,6.7417,6.7396,6.7374,6.7346,6.7325,6.7304,6.7283,6.7261,6.724,6.7219,6.7191,6.717,6.7156,6.7134,6.712,6.7106,6.7092,6.7085,6.7071,6.7064,6.705,6.7043,6.7029,6.7015,6.7008,6.6994,6.698,6.6966,6.6959,6.6945,6.6931,6.6924,6.691,6.6903,6.6889,6.6875,6.6861,6.684,6.6826,6.6812,6.6798,6.6784,6.677,6.6756,6.6749,6.6742,6.6742,6.6742,6.6742,6.6742,6.6742,6.6749,6.6749,6.6756,6.6756,6.6763,6.6763,6.6763,6.677,6.6784,6.6791,6.6805,6.6819,6.6833,6.684,6.6861,6.6875,6.6889,6.6903,6.6917,6.6931,6.6952,6.6973,6.6994,6.7022,6.705,6.7085,6.712,6.7149,6.7177,6.7212,6.724,6.7275,6.7304,6.7339,6.736,6.7389,6.7417,6.7452,6.7481,6.7516,6.7552,6.758,6.7616,6.7651,6.7694,6.7737,6.778,6.7823,6.7858,6.7901,6.7952,6.8002,6.8052,6.811,6.816,6.8218,6.8268,6.8326,6.8376,6.8427,6.8478,6.8521,6.8565,6.8601,6.8645,6.8681,6.8725,6.8762,6.8805,6.8849,6.8886,6.893,6.8974,6.901,6.9054,6.9091,6.9128,6.9172,6.9209,6.9246,6.9283,6.932,6.9357,6.9394,6.9431,6.946,6.9497,6.9527,6.9564,6.9601,6.9631,6.9668,6.9698,6.9728,6.9765,6.981,6.9854,6.9907,6.9952,7.0004,7.0049,7.0094,7.0147]

# find if x is different from y
print(np.array_equal(x, y))